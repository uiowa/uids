@import '../../assets/scss/variables';
@import '../../assets/scss/utilities';
/* Base card styles
 * ====================== */
.card {
  border: 1px solid;
  position: relative;
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  flex-wrap: wrap;
  margin-bottom: 1.6rem;
  padding: 2rem;
  text-decoration: none;
  //line-height: 1.7;

  @include flexbox;
  @include flex($fg: 1, $fs: 1, $fb: 0%);
  @include flex-direction($value: column);

  &:focus-within .card__title a:focus {
    text-decoration: underline;
  }

  @include breakpoint(sm) {
    border: none;
    margin-bottom: 0;
  }

  p + .btn,
  p + .bttn {
    margin-top: $md;
  }

  h2,
  h3,
  h4,
  h5,
  h6 {
    &:not(:first-child) {
      margin-top: 0;
    }
  }

  ul,
  ol,
  dl,
  table {
    font-size: 1rem;
    line-height: 1.7;
  }

  p {
    margin-bottom: 0;
    margin-top: 0;
    font-size: 1rem;
    line-height: 1.7;

    a {
      position: relative;
      z-index: 1;
    }
  }

  footer {
    margin-top: 2rem;
  }
}

.card__media {
  margin-left: -2rem;
  margin-right: -2rem;
  margin-top: -2rem;
  margin-bottom: 2rem;
  text-align: center;
}

.card--borderless {
  border-width: 0;
  padding: 0;

  .card__media {
    margin-left: 0;
    margin-right: 0;
    margin-top: 0;
  }

  .bttn {
    margin-bottom: 0;
  }
}

.card--media-padded {
  .card__media {
    margin-left: 0;
    margin-top: 0;
    margin-right: 0;
  }
}

.card--centered {
  text-align: center;
}

.card__title {
  margin: 0 0 $sm;
  padding: 0;
  font-size: 1.5rem;
  font-weight: $font-weight-medium;
  line-height: 1.2;

  a {
    text-decoration: none;

    &:hover,
    &:focus {
      text-decoration: underline;
    }
  }

  &.headline {
    font-size: 1.5rem;
  }

  &:focus-within ~ .bttn {
    background-position: 0;
    background-size: 200% 100%;

    i,
    svg {
      color: $secondary;
    }
  }
}

.card__subtitle {
  opacity: .7;
  font-family: $font-family-serif;
  font-size: 1.3rem;
  font-weight: $font-weight-medium;
  line-height: 1.3;

  & + .btn,
  & + .bttn,
  & + p {
    margin-top: $sm;
  }
}

.card__details {
  margin: 0 0 $sm;
}

// @todo remove card__date class in 4.x branch.
.card__meta {
  font-family: $font-family-sans-serif;
  font-size: 1.1rem;
  line-height: 1.4;
  font-weight: $font-weight-normal;
  .fas {
    margin-right: .3rem;
  }
}
// @todo remove card__label class in 4.x branch.
.card__label {
  font-family: "Zilla Slab", serif;
  font-size: 1.2rem;
  font-weight: 400;
  padding-left: 20px;
  line-height: 1.3;
  margin-top: .125rem;

  .fas,
  .svg-inline--fa {
    opacity: 0.6;
    padding-right: $xsm;
    font-size: 1rem;
    line-height: 1.2;
    position: absolute;
    margin-left: -20px;
  }

  .svg-inline--fa {
    width: 17px;
  }
}

/* Card media styles
 * ====================== */

.card__media--large,
.card__media--medium,
.card__media--small {
  margin-left: auto;
  margin-right: auto;
  @include breakpoint(sm) {
    justify-content: center;
    margin: 0 auto;
  }
}

.card__media--small {
  @include breakpoint(sm) {
    flex: 0 0 25%;
    width: 25%;
  }

  &.media--circle {
    max-width: 150px;
  }
}

.card__media--medium {
  @include breakpoint(sm) {
    flex: 0 0 37.5%;
    width: 37.5%;
  }

  img {
    align-self: start;
  }

  &.media--circle {
    width: 50%;
  }
}

// Stacked modifications.
.card--stacked {
  .card__media--small {
    &.media--circle {
      flex: unset;
      width: 40%;
    }
  }
  .card__media--medium {
    &.media--circle {
      @include breakpoint(sm) {
        flex: unset;
        width: 60%;
      }
    }
  }
}

// Left/right only
.card--media-left,
.card--media-right {
  .card__media--large {
    @include breakpoint(sm) {
      @include breakpoint(sm) {
        flex: 0 0 50%;
        width: 50%;
      }
    }

    &.media--circle {
      @include breakpoint(sm) {
        flex: 0 0 37%;
        width: 37%;
      }
    }
  }

  .card__media--medium {
    &.media--circle {
      @include breakpoint(sm) {
        flex: 0 0 25%;
        width: 25%;
      }
    }
  }
}

/* Card left/right styles
 * ====================== */
.card--media-left,
.card--media-right {

  @include breakpoint(sm) {
    flex-direction: row;
  }

  .card__body {
    padding: 0;
    @include breakpoint(sm) {
      flex: 0 1 100%;
    }
    min-height: 1px;
  }

  .card__media + .card__body {
    padding: 2rem 0 0;
    @include breakpoint(sm) {
      padding: 0;
    }
  }

  &[class*="bg-"] {
    .card__body {
      padding: 2rem;
      @include breakpoint(sm) {
        padding: 0;
      }
    }
  }

  &.card--outline {
    .card__body {
      padding: 2rem;
      @include breakpoint(sm) {
        padding: 0;
      }
    }
  }

  &.card--outline,
  &[class*="bg-"]:not(.bg--white) {
    @include breakpoint(sm) {
      padding: 2rem;
    }
  }

  // Reduce padding for small circle crop next to card__body
  .media--circle.card__media--small {
    +.card__body {
      @include breakpoint(sm) {
        // padding: 0 0 0 $gutter;
      }
    }
  }

  @include breakpoint(sm) {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: unset;
    width: 100%;
    margin-bottom: 1.6rem;
  }

  .card__title {
    font-family: $font-family-serif;
    font-weight: $font-weight-bold;
    @include breakpoint(sm) {
      padding: 0;
      margin: 0 0 $xsm;
    }
  }
}

.card--media-left {
  .card__media+.card__body {
    // padding: 2rem 0 0;
    @include breakpoint(sm) {
      padding: 0 0 $md 2rem;
    }
  }
}

.card--media-right {
  &.card--outline {
    .card__media+.card__body {
      padding: 2rem;
      @include breakpoint(sm) {
        padding: 0 2rem $md 0;
      }
    }
  }

  .card__media+.card__body {
    @include breakpoint(sm) {
      padding: 0 2rem $md 0;
    }
  }
  @include breakpoint(sm) {
    flex-direction: row-reverse;
  }

  &.card,
  &.card--outline {
    @include breakpoint(sm) {
      flex-direction: row-reverse;
    }
  }
}

/* Margin and padding adjustments for media--circle
 * ====================== */
.card {
  // Adjust margin and padding for stacked circle if there is a background section color
  [class*="bg-"] & {
    &.card--stacked[class*="bg-"] {
      .media--circle {
        margin-top: 2rem;

        &.card__media--large {
          padding: 0 2rem;
        }
      }
    }
  }

  &--media-left,
  &--media-right,
  &--stacked {
    // Add padding if large circle stacked is outline or has bg color
    .media--circle.card__media--large {
      padding: 0 2rem;
    }

    &[class*="bg-"] {
      .media--circle {
        margin-top: 2rem;
        @include breakpoint(sm) {
          margin-top: 0;
        }
      }
    }
  }
  // override the above rule to remove left/right padding at sm breakpoint
  &--media-left,
  &--media-right {
    .media--circle.card__media--large {
      @include breakpoint(sm) {
        padding: 0;
      }
    }
  }
  // override the above rule for stacked
  &--stacked {
    &[class*="bg-"] {
      .media--circle {
        margin-top: 2rem;
      }
    }
  }

  &--outline {
    &.card--media-left,
    &.card--media-right,
    &.card--stacked {
      .media--circle {
        margin-top: 2rem;
      }
    }
    // remove top margin for left/right above sm breakpoint
    &.card--media-left,
    &.card--media-right {
      .media--circle {
        @include breakpoint(sm) {
          margin-top: 0;
        }
      }
    }
  }
}

/* Background color adjustments
 * ====================== */
// set padding if background color is different from card color
[class*="bg-"] .card.card--stacked[class*="bg-"],
.card.card--stacked[class*="bg-"]:not([class*="bg--white"]) {
  .card__body {
    padding: 2rem;
  }
}
// set card outline borders to override defaults set in background.scss
.card.card--outline {
  &[class*="bg--white"],
  &[class*="bg--gray"],
  &[class*="bg--gold"] {
    [class*="bg-"] & {
      border: 1px solid rgba(0, 0, 0, 0.125);
    }
    border: 1px solid rgba(0, 0, 0, 0.125);
  }
  [class*="bg--white"] &,
  [class*="bg--gray"] &,
  [class*="bg--gold"] & {
    border: 1px solid rgba(0, 0, 0, 0.125);
  }
  [class*="bg--black"] & {
    border-color: rgba(255,255,255,.325);
  }
}

// Border color adjustments
.card:not([class*="bg-"]) {
  border-color: rgba(0,0,0,.125);
}

.card[class*="bg--black"] {
  .bttn--sans-serif {
    border-color: rgba(255,255,255,.425);
  }
}

// set button border color for only the bg--white version
.card[class*="bg--white"] {
  [class*="bg-"] & {
    .bttn--outline {
      border-color: $primary;
    }
  }

  .bttn--outline {
    border-color: $primary;
  }
}
// Cards within sections with background colors
[class*="bg-"] {
  .card {
    // Adjust padding if a card container has a background color.
    &--media-left.card,
    &--media-right.card {
      @include breakpoint(sm) {
        padding: 2rem;
      }
      // Remove padding if there's a section background color but no card bg set
      &:not([class*="bg-"]) {
        @include breakpoint(sm) {
          padding: 0;
        }
      }
      // Add padding if there's a section background color but no card bg set with border
      &--outline:not([class*="bg-"]) {
        @include breakpoint(sm) {
          padding: 2rem;
        }
      }
    }
  }
}
